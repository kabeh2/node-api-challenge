{"version":3,"sources":["redux/actions/actionTypes.jsx","redux/actions/actionCreators.jsx","redux/reducers/fetchReducer.jsx","services/authService.jsx","redux/sagas/app.saga.jsx","redux/sagas/root.saga.jsx","redux/reducers/index.jsx","components/Navbar.jsx","components/ProjectCard.jsx","pages/ProjectDetails.jsx","components/AbsoluteWrapper.jsx","pages/Home.jsx","components/forms/TextInput.jsx","components/forms/Checkbox.jsx","components/forms/ProjectForm.jsx","components/forms/Form.jsx","pages/AddProject.jsx","App.js","serviceWorker.js","index.js"],"names":["actionTypes","fetchRequest","type","fetchSuccess","projects","payload","fetchError","error","initialState","loading","fetchReducer","state","action","apiEndpoint","tryGetProjects","onGetProjects","tryDeleteProject","onDeleteProject","tryAddProject","onAddProject","tryUpdateProject","onUpdateProject","appSagas","fetchProjects","id","a","axios","get","data","put","call","dataArray","console","log","takeLatest","fetchDeleteProject","delete","projectsCopy","updatedProjects","filter","project","response","fetchAddProject","post","fetchUpdateProject","all","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","run","AppNavbar","Navbar","bg","variant","Container","Brand","href","Nav","className","to","exact","activeClassName","Button","connect","dispatch","deleteProject","allProjects","Card","Header","style","flexBasis","name","actions","pathname","onClick","confirm","Body","description","ProjectDetails","index","notes","AbsoluteWrapper","children","position","width","getProjects","match","useRouteMatch","useEffect","params","Row","map","Col","md","key","length","MyTextInput","textArea","label","props","useField","field","meta","marginBottom","htmlFor","Form","Control","as","rows","touched","Text","color","MyCheckbox","Check","addProject","updateProject","history","useHistory","location","useLocation","initialValues","completed","validationSchema","Yup","required","onSubmit","values","setErrors","setStatus","resetForm","success","replace","submit","message","TextInput","placeholder","Checkbox","goBack","sm","AddProject","App","useContext","__RouterContext","transitions","useTransition","from","opacity","transform","enter","leave","item","div","path","component","Home","Boolean","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.baf8393c.chunk.js","sourcesContent":["export const actionTypes = {\n  FETCH_REQUEST: \"FETCH_REQUEST\",\n  FETCH_SUCCESS: \"FETCH_SUCCESS\",\n  FETCH_ERROR: \"FETCH_ERROR\",\n  GET_PROJECTS: \"GET_PROJECTS\",\n  DELETE_PROJECT: \"DELETE_PROJECT\",\n  ADD_PROJECT: \"ADD_PROJECT\",\n  UPDATE_PROJECT: \"UPDATE_PROJECT\"\n};\n","import { actionTypes } from \"./\";\n\nexport const fetchRequest = () => ({\n  type: actionTypes.FETCH_REQUEST\n});\n\nexport const fetchSuccess = projects => ({\n  type: actionTypes.FETCH_SUCCESS,\n  payload: projects\n});\n\nexport const fetchError = error => ({\n  type: actionTypes.FETCH_ERROR,\n  payload: error\n});\n\nexport const getProjects = id => ({\n  type: actionTypes.GET_PROJECTS,\n  payload: id\n});\n\nexport const deleteProject = (id, projects) => ({\n  type: actionTypes.DELETE_PROJECT,\n  payload: {\n    id,\n    projects\n  }\n});\n\nexport const addProject = project => ({\n  type: actionTypes.ADD_PROJECT,\n  payload: project\n});\n\nexport const updateProject = (id, project) => ({\n  type: actionTypes.UPDATE_PROJECT,\n  payload: {\n    id,\n    project\n  }\n});\n","import { actionTypes } from \"../actions\";\n\nconst initialState = {\n  loading: false,\n  projects: [],\n  error: \"\"\n};\n\nconst fetchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n    case actionTypes.FETCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        projects: action.payload\n      };\n    case actionTypes.FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fetchReducer;\n","export const apiEndpoint = `https://node-api-challenge-kabeh2.herokuapp.com/api/`;\n","import { call, all, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  actionTypes,\n  fetchRequest,\n  fetchSuccess,\n  fetchError\n} from \"../actions\";\nimport { apiEndpoint } from \"../../services/authService\";\n\n// fetch get projects\nconst fetchProjects = async id => {\n  const { data } = await axios.get(`${apiEndpoint}/projects/${id ? id : \"\"}`);\n  return data;\n};\n\n// worker get projects\nfunction* tryGetProjects(action) {\n  try {\n    yield put(fetchRequest());\n    const data = yield call(fetchProjects, action.payload);\n    const id = action.payload;\n\n    let dataArray;\n\n    if (id) {\n      dataArray = [data];\n    } else {\n      dataArray = [...data];\n    }\n\n    yield put(fetchSuccess(dataArray));\n  } catch (error) {\n    console.log(\"Error: \", error);\n    yield put(fetchError(error));\n  }\n}\n\n// watcher get projects\nfunction* onGetProjects() {\n  yield takeLatest(actionTypes.GET_PROJECTS, tryGetProjects);\n}\n\n// fetch delete projects\nconst fetchDeleteProject = async id => {\n  const { data } = await axios.delete(`${apiEndpoint}/projects/${id}`);\n  return data;\n};\n\n// worker delete projects\nfunction* tryDeleteProject(action) {\n  const projectsCopy = [...action.payload.projects];\n  try {\n    yield put(fetchRequest());\n\n    const updatedProjects = [...action.payload.projects].filter(\n      project => project.id !== action.payload.id\n    );\n\n    // Updating State\n    yield put(fetchSuccess(updatedProjects));\n\n    // Updating Server\n    yield call(fetchDeleteProject, action.payload.id);\n  } catch (error) {\n    console.log(\"Error: \", error);\n    // Reverting state changes back\n    yield put(fetchSuccess(projectsCopy));\n    // Error\n    yield put(fetchError(error.response));\n  }\n}\n\n// watcher delete projects\nfunction* onDeleteProject() {\n  yield takeLatest(actionTypes.DELETE_PROJECT, tryDeleteProject);\n}\n\n// fetch add project\n\nconst fetchAddProject = async project => {\n  const { data } = await axios.post(`${apiEndpoint}/projects`, project);\n  return data;\n};\n\n// worker add project\nfunction* tryAddProject(action) {\n  try {\n    yield put(fetchRequest());\n\n    yield call(fetchAddProject, action.payload);\n  } catch (error) {\n    console.log(\"Error: \", error);\n    yield put(fetchError(error));\n  }\n}\n\n// watcher add project\nfunction* onAddProject() {\n  yield takeLatest(actionTypes.ADD_PROJECT, tryAddProject);\n}\n\n// fetch update project\nconst fetchUpdateProject = async (id, project) => {\n  const { data } = await axios.put(`${apiEndpoint}/projects/${id}`, project);\n  return data;\n};\n\n// worker update project\nfunction* tryUpdateProject(action) {\n  try {\n    yield put(fetchRequest());\n\n    yield call(fetchUpdateProject, action.payload.id, action.payload.project);\n  } catch (error) {\n    console.log(\"Error: \", error);\n    yield put(fetchError(error));\n  }\n}\n\n// watcher update project\nfunction* onUpdateProject() {\n  yield takeLatest(actionTypes.UPDATE_PROJECT, tryUpdateProject);\n}\n\nexport default function* appSagas() {\n  yield all([\n    call(onGetProjects),\n    call(onDeleteProject),\n    call(onAddProject),\n    call(onUpdateProject)\n  ]);\n}\n","import { call, all } from \"redux-saga/effects\";\nimport appSagas from \"./app.saga\";\n\nexport default function* rootSaga() {\n  yield all([call(appSagas)]);\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport fetchReducer from \"./fetchReducer\";\nimport rootSaga from \"../sagas/root.saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  fetchReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\n\nfunction AppNavbar() {\n  return (\n    <>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Node REST API Challenge</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <NavLink to=\"/\" exact activeClassName=\"selected\">\n              Home\n            </NavLink>\n          </Nav>\n          <Nav>\n            <NavLink to=\"/add-project\" activeClassName=\"selected-btn\">\n              <Button variant=\"outline-info\">Add</Button>\n            </NavLink>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default AppNavbar;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { deleteProject } from \"../redux/actions\";\n\nfunction ProjectCard({ projects, allProjects, deleteProject }) {\n  const onDeleteProject = (id, allProjects) => {\n    const result = window.confirm(\n      \"Are you sure you want to delete this project?\"\n    );\n    if (result) {\n      deleteProject(id, allProjects);\n    }\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\n        <div style={{ flexBasis: \"60%\" }}>{projects.name}</div>\n        {!projects.actions && (\n          <div>\n            <Link\n              to={{\n                pathname: `/projects/${projects.id}`\n              }}\n              className=\"p-0\"\n            >\n              <Button variant=\"outline-info\">Details</Button>\n            </Link>\n            <Button\n              className=\"ml-2\"\n              variant=\"outline-danger\"\n              onClick={() => onDeleteProject(projects.id, allProjects)}\n            >\n              Delete\n            </Button>\n          </div>\n        )}\n        {projects.actions && (\n          <Link\n            to={{\n              pathname: `/update/${projects.id}`,\n              state: {\n                project: allProjects\n              }\n            }}\n            className=\"p-0\"\n          >\n            <Button variant=\"outline-info\">Update</Button>\n          </Link>\n        )}\n      </Card.Header>\n      {projects && (\n        <Card.Body>\n          <blockquote className=\"blockquote mb-0\">\n            <p>{projects.description}</p>\n          </blockquote>\n        </Card.Body>\n      )}\n    </Card>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteProject: (id, projects) => dispatch(deleteProject(id, projects))\n});\n\nexport default connect(null, mapDispatchToProps)(ProjectCard);\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nfunction ProjectDetails({ action, index }) {\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\n        {`Project Details ${index + 1} - ${action.description}`}\n      </Card.Header>\n      {action && (\n        <Card.Body>\n          <blockquote className=\"blockquote mb-0\">\n            <p>{action.notes}</p>\n          </blockquote>\n        </Card.Body>\n      )}\n    </Card>\n  );\n}\n\nexport default ProjectDetails;\n","import React from \"react\";\n\nfunction AbsoluteWrapper({ children }) {\n  return <div style={{ position: \"absolute\", width: \"100%\" }}>{children}</div>;\n}\n\nexport default AbsoluteWrapper;\n","import React, { useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { getProjects } from \"../redux/actions\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport ProjectDetails from \"./ProjectDetails\";\nimport AbsoluteWrapper from \"../components/AbsoluteWrapper\";\n\nfunction Home({ projects, getProjects }) {\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    getProjects(match.params.id);\n  }, [getProjects, match]);\n\n  return (\n    <AbsoluteWrapper>\n      {projects ? (\n        <Row className=\"justify-content-around\">\n          {projects.map(project => (\n            <Col md={12} key={project.id}>\n              <ProjectCard projects={project} allProjects={projects} />\n              {project.actions && (\n                <>\n                  {project.actions.length > 0 && <h3>Project Details</h3>}\n                  {project.actions.map((action, index) => (\n                    <ProjectDetails\n                      action={action}\n                      index={index}\n                      key={action.id}\n                    />\n                  ))}\n                </>\n              )}\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </AbsoluteWrapper>\n  );\n}\n\nconst mapStateToProps = ({ fetchReducer: { projects } }) => ({\n  projects\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: id => dispatch(getProjects(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nconst MyTextInput = ({ textArea, label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and also replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <div style={{ marginBottom: \"16px\" }}>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      {textArea ? (\n        <Form.Control as=\"textarea\" rows=\"3\" {...field} {...props} />\n      ) : (\n        <Form.Control {...field} {...props} />\n      )}\n\n      {meta.touched && meta.error ? (\n        <Form.Text className=\"error\" style={{ color: \"red\" }}>\n          {meta.error}\n        </Form.Text>\n      ) : null}\n    </div>\n  );\n};\n\nexport default MyTextInput;\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  return (\n    <>\n      <Form.Check\n        type=\"checkbox\"\n        {...field}\n        {...props}\n        label={children}\n        className=\"mb-3\"\n      />\n\n      {meta.touched && meta.error ? (\n        <Form.Text className=\"error\">{meta.error}</Form.Text>\n      ) : null}\n    </>\n  );\n};\n\nexport default MyCheckbox;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextInput from \"./TextInput\";\nimport Checkbox from \"./Checkbox\";\nimport { Button } from \"react-bootstrap\";\nimport { addProject, updateProject } from \"../../redux/actions\";\n\nconst ProjectForm = ({ addProject, updateProject }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: location.state ? location.state.project[0].name : \"\",\n          description: location.state\n            ? location.state.project[0].description\n            : \"\",\n          completed: location.state\n            ? location.state.project[0].completed\n            : false\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string().required(\"Required\"),\n          description: Yup.string().required(\"Required\"),\n          completed: Yup.boolean()\n        })}\n        onSubmit={async (values, { setErrors, setStatus, resetForm }) => {\n          try {\n            if (location.state) {\n              await updateProject(location.state.project[0].id, values);\n            } else {\n              await addProject(values);\n            }\n            resetForm({});\n            setStatus({ success: true });\n            history.replace(\"/\");\n          } catch (error) {\n            setStatus({ success: false });\n            setErrors({ submit: error.message });\n          }\n        }}\n      >\n        <Form>\n          {location.state ? <h3>Update Project</h3> : <h3>Add Project</h3>}\n          <TextInput\n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Write name here...\"\n          />\n          <TextInput\n            label=\"Description\"\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Write description here...\"\n            textArea\n          />\n          <Checkbox name=\"completed\">Is this project completed?</Checkbox>\n\n          <Button\n            variant=\"outline-danger\"\n            type=\"button\"\n            className=\"mr-2\"\n            onClick={() => {\n              const confirmed = window.confirm(\n                \"Are you sure you want to cancel?\"\n              );\n              if (confirmed) {\n                history.goBack();\n              }\n            }}\n          >\n            Cancel\n          </Button>\n          <Button variant=\"outline-info\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProject: project => dispatch(addProject(project)),\n  updateProject: (id, project) => dispatch(updateProject(id, project))\n});\n\nexport default connect(null, mapDispatchToProps)(ProjectForm);\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ProjectForm from \"./ProjectForm\";\n\nfunction Form() {\n  return (\n    <Row className=\"justify-content-center\">\n      <Col sm={8} md={6}>\n        <ProjectForm />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"../components/forms/Form\";\nimport AbsoluteWrapper from \"../components/AbsoluteWrapper\";\n\nfunction AddProject() {\n  return (\n    <AbsoluteWrapper>\n      <Form />\n    </AbsoluteWrapper>\n  );\n}\n\nexport default AddProject;\n","import React, { useContext } from \"react\";\nimport { Switch, Route, __RouterContext } from \"react-router-dom\";\nimport { useTransition, animated } from \"react-spring\";\nimport Container from \"react-bootstrap/Container\";\nimport AppNavbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport AddProject from \"./pages/AddProject\";\nimport \"./App.css\";\n\nfunction App() {\n  const { location } = useContext(__RouterContext);\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0, transform: \"translate(100%,0\" },\n    enter: { opacity: 1, transform: \"translate(0%,0)\" },\n    leave: { opacity: 0, transform: \"translate(-50%, 0\" }\n  });\n  return (\n    <div className=\"App d-flex flex-column\">\n      <header className=\"App-header\">\n        <AppNavbar />\n      </header>\n      <main className=\"my-5 flex-grow-1\">\n        <Container>\n          {transitions.map(({ item, props, key }) => (\n            <animated.div key={key} style={props}>\n              <Switch location={item}>\n                <Route path=\"/update/:id\" component={AddProject} />\n                <Route path=\"/add-project\" component={AddProject} />\n                <Route path=\"/projects/:id\" component={Home} />\n                <Route exact path=\"/\" component={Home} />\n              </Switch>\n            </animated.div>\n          ))}\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reducers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}